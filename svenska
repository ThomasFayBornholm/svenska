<!DOCTYPE html>
<html>
<head>
	<link rel="stylesheet" href="svenska.css">
  <script src="jquery-3.5.1.min.js"></script>
	<meta char="UTF-8" name="viewport" content="width=device-width, initial-scale=1">
</head>
<body onload="wordCount(); format()">
<h1 id="iScore"></h1>
<h2 id="iScore2">
<span class="score" id="iScoreAdj"></span>
	<span class="progressContainer">
		<span class="progress" id="iProgAdj"></span>
	</span>
<span class="score" id="iScoreVerb"></span>
<span class="progressContainer">
	<span class="progress" id="iProgVerb"></span>
</span>
<span class="score" id="iScoreAdverb"></span>
<span class="progressContainer">
	<span class="progress" id="iProgAdverb"></span>
</span>
<span class="score" id="iScoreSub_en"></span>
<span class="progressContainer">
	<span class="progress" id="iProgSub_en"></span>
</span>
<span class="score" id="iScoreSub_ett"></span>
<span class="progressContainer">
	<span class="progress" id="iProgSub_ett"></span>
</span>
</h2>
<div>
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
<img class="titleHorse" src="img/Dalarna.jpg">
</div>
<div class="row">
  <div id="c1" class="column left" style="background-color:#aaa;">
		<div id="iWordList">
		<input class="iSearch" type="search" id="iWord";>
		<div class="dropdown">
			<button class="dropbtn b2">Add</button>
			<div class="dropdown-content">
				<p onclick=addWord("adjektiv") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">Adjektiv</p>
				<p onclick=addWord("verb") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">Verb</p>
				<p onclick=addWord("adverb") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">Adverb</p>
				<p onclick=addWord("substantiv_en") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">Substantiv_en</p>
				<p onclick=addWord("substantiv_ett") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">Substantiv_ett</p>
			</div>
		</div>
		<img class="b2" id="iLookup" class="bImg" src="img/Dalarna.jpg" onclick="return lookupWord('')">
		<div class="dropdown">
			<img class="dropbtn b2" id="iTranslate" src="img/Magnify.png" onclick="return translateWord(false)">
			<div class="dropdown-content">
				<p onclick="translateWord(false)" onmouseover="highlight(this,event)" onmouseout="highlight(this, event)">From English</p>
				<p onclick="translateWord(true)" onmouseover="highlight(this,event)" onmouseout="highlight(this, event)">Tyda.se</p>
				<p onclick="exampleWord()" onmouseover="highlight(this,event)" onmouseout="highlight(this, event)">Example Word (Wikipedia)</p>
			</div>
		</div>
		<div class="dropdown">
			<img id="iDelete" class="dropdown b2" src="img/Delete.png"">
			<div class="dropdown-content">
				<p onclick="removeWord('adjektiv')" onmouseover="highlight(this,event)" onmouseout="highlight(this, event)">Adjektiv</p>
				<p onclick="removeWord('verb')" onmouseover="highlight(this,event)" onmouseout="highlight(this, event)">Verb</p>
				<p onclick="removeWord('adverb')" onmouseover="highlight(this,event)" onmouseout="highlight(this, event)">Adverb</p>
				<p onclick="removeWord('substantiv_en')" onmouseover="highlight(this,event)" onmouseout="highlight(this, event)">Substantiv_en</p>
				<p onclick="removeWord('substantiv_ett')" onmouseover="highlight(this,event)" onmouseout="highlight(this, event)">Substantiv_ett</p>
			</div>
		</div>
		</div>

  </div>
  <div id="c2" class="column right" style="background-color:#bbb;">
		<div class="dropdown">
			<button class="dropbtn b1">Show</button>
			<div class="dropdown-content">
				<p onclick=showWords("all") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">All</p>
				<p onclick=showWords("adjektiv") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">Adjektiv</p>
				<p onclick=showWords("verb") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">Verb</p>
				<p onclick=showWords("adverb") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">Adverb</p>
				<p onclick=showWords("substantiv_en") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">Substantiv_en</p>
				<p onclick=showWords("substantiv_ett") onmouseover="highlight(this,event)" onmouseout="highlight(this,event)">Substantiv_ett</p>
			</div>
		</div>
		<button class="b1" id="iSetGrade" oncontextmenu="changeGrade(event, this)" onclick="changeGrade(event,this)">Grade</button>
		<button class="b1" id="iAllGradesToggle" onclick="allGrades(this)">All</button>
		<input class="iSearch" id="iInpText" type="search">
		<img class="b3" id="iReadInp" src="img/Go.png" onclick="addTextPar()">
		<br>
		<label id="iShowStatus"></label>
		<label id="iShowSt"></label>

  </div>
</div>
<img class="b2 navL" src="img/leftArrow.png" id="iPrev" onclick="dec()" oncontextmenu="resetInd(event)">
<img class="b2 navR" src="img/rightArrow.jpg" id="iNext" onclick="inc()" oncontextmenu="satInd(event)">
<label class="pFB" id="iParInd"></label>
<p class="pMid" id="iTextPar"></p>
<ol class="lMid" id="iKnownList"></ol>
</body>
<script>
function format() {
	let el = document.getElementsByClassName("b1");
	for (i = 0; i < el.length; i++) {
		el[i].style.cursor = "pointer";
	}
	el = document.getElementsByClassName("b2");
	for (i = 0; i < el.length; i++) {
		el[i].style.cursor = "pointer";
	}
	el = document.getElementsByClassName("b3");
	for (i = 0; i < el.length; i++) {
		el[i].style.cursor = "pointer";
	}
	el = document.getElementsByClassName("h3");
	for (i = 0; i < el.length; i++) {
		el[i].addEventListener("mouseover", function() {
			this.style.cursor = "pointer";
		})
	}
	el = document.getElementById("iSetGrade");
	el.style.backgroundColor="black";	
	el.style.color="white";	

}
let RANGE=25;
let WORDS = "";
let IND = 0;
let PAR_IND = 0;
let ACTIVE="white";

let N_TOT = 0;
let N_ADJ = 0;
let N_VERB= 0;
let N_ADVERB= 0;
let N_SUB_EN = 0;
let N_SUB_ETT = 0;

let S_ADJ = 0.0;
let S_VERB= 0.0;
let S_ADVERB= 0.0;
let S_SUB_EN = 0.0;
let S_SUB_ETT = 0.0;

var showButtonIds = ["iShowAll", "iShowAdj", "iShowVerbs", "iShowAdverbs", "iShowSub_en", "iShowSub_ett"];
var showButtons = [];
showButtons["iShowAll"] = "all";
showButtons["iShowAdj"] = "adjektiv";
showButtons["iShowVerbs"] = "verb";
showButtons["iShowAdverbs"] = "adverb"
showButtons["iShowSub_en"] = "substantiv_en";
showButtons["iShowSub_ett"] = "substantiv_ett";

function addWord(c) {
	let word = document.getElementById("iWord").value;
	wordList = [];
	var uppBound;
	if (word.includes(",")) {
		wordList = word.split(",");
		uppBound = wordList.length;
	} else {
		wordList = word;
		uppBound = 1;
	}
	for (let i = 0; i < uppBound; i++) {
		if (wordList[i].length !==1) {
			word = wordList[i];
		}
		if (word.length > 0) {
			// Check that word does not exist already
			fetch ('backend/existsWord.php?class=' + c + '&word=' + word, {
				method: 'get',
				mode: 'cors',
				headers: {
					'Content-Type': 'application/json'
				}
			})	
			.then(response => {
				return response.json();
			})
			.then(json => {
				if (json !== -1) {	
					fetch ('backend/addWord.php?class=' + c + '&word=' + json, {
						method: 'get',
						mode: 'cors',
						headers: {
							'Content-Type': 'application/json'
						},
					})
					.then(response => {
						return response.json();
					})
					.then(json => {
						wordCount();
					})
					.catch(error => {
						console.log(error);
					})
				}
			})
			.catch(error => {
				console.lgo(error);
			})
		}
	}
}

function removeWord(c) {
  // Remove from "active list" list
	let iWord = document.getElementById("iWord");
	let w = iWord.value;
	if (w.length === 0) {
		return;
	}
	if (c.length > 1) {
		fetch('backend/removeWord.php?word=' + w + '&class=' + c, {
			method: 'get',
			mode: 'cors',
			headers: {
				'Content-Type': 'application/json'
			}
		})
		.then(response => {
			return response.json();
		})
		.then(json => {
			if (json === "-1") {
				console.log("Failed to delete word: " + w);
			}	else {
				iWord.value = "";	
				showWords(c);
			}
			wordCount();
		})
		.catch(error => {
			console.log(error);
		})
	}
}

function wordCount() {
	fetch('backend/wordCount.php', {
		method: 'get',
		mode: 'cors',
		headers: {
			'Content-Type': 'application/json'
		},
	})
	.then(response => {
		return response.json();
	})
	.then(json => {
		let num = parseInt(json["total"]);
		$("#iScore").html(num + " - " + json["score"] + "%");

		let tmp = "";
		tmp += "; Verb:" + json["verb"];
		tmp += "; Adv:" + json["adj"];
		tmp += "; Sub_en:" + json["substantiv_en"];
		tmp += "; Sub_ett:" + json["substantiv_ett"];
		$("#iScoreAdj").html("Adj: " + json["adj"]);
		$("#iScoreVerb").html("Verb: " + json["verb"]);
		$("#iScoreAdverb").html("Adv: " + json["adverb"]);
		$("#iScoreSub_en").html("Sub_en: " + json["substantiv_en"]);
		$("#iScoreSub_ett").html("Sub_ett: " + json["substantiv_ett"]);
		$("#iScoreSub_ett").css("margin-right", "0");
	
		arr = ["iProgAdj", "iProgVerb", "iProgAdverb", "iProgSub_en", "iProgSub_ett"];
		var width, fill, empty, id0, id, score;
		for (i = 0; i < arr.length; i++) {	
			id = "#" + arr[i];
			score = id.replace("#iProg","score");
			score_p = json[score];	
			$(id).css("width", score_p + "%");
		}
		let c = document.getElementById("iShowStatus").innerText;	
		var tot=0;
		switch (c) {
			case "adjektiv":
				tot = json["adj"];	
				break;
			case "verb":
				tot = json["verb"];	
				break;
			case "adverb":
				tot = json["adverb"];	
				break;
			case "substantiv_en":
				tot = json["substantiv_en"];	
				break;
			case "substantiv_ett":
				tot = json["substantiv_ett"];	
				break;
			default:	
				tot = json["total"];
		}

		N_TOT = json["total"];
		N_ADJ = json["adj"];
		N_VERB = json["verb"];
		N_ADVERB = json["adverb"];
		N_SUB_EN = json["substantiv_en"];
		N_SUB_ETT = json["substantiv_ett"];

		S_ADJ = json["scoreAdj"];
		S_VERB = json["scoreVerb"];
		S_ADVERB = json["scoreAdverb"];
		S_SUB_EN = json["scoreSub_en"];
		S_SUB_ETT = json["scoreSub_ett"];
	})
	.catch(error => {
		console.log(error);
	})
}

function showWords(c) {
	clearText();
	let regex = document.getElementById("iWord").value;
	let g = getGrade(document.getElementById("iSetGrade"));
	var el;
	el = document.getElementById("iShowStatus"); 
	el.innerHTML = c;
	fetch('backend/showWords.php?class=' + c + '&regex=' + regex + "&grade=" + g, {
		method: 'get',
		mode: 'cors',
		headers: {
			'Content-Type': 'application/json'
		},
	})
	.then(response => {
		return response.json();
	})
	.then(json => {
		clearList();
		let ol = document.getElementById("iKnownList");
		if (PAR_IND > json.length / 10) {
			PAR_IND = parseInt(json.length / 10);
		}
		let start = 10 * PAR_IND;
		let end = start + 10;
		if (end > json.length) {
			end = json.length;
		}	
		ol.start = start + 1;
		for (let i = start; i < end; i++) {
			let el = document.createElement("li");
			word = json[i].replaceAll(" 0", "").replaceAll(" 1", "").replaceAll(" 2", "")
			
			let fmt = "";
			if (json[i].includes(" 0")) {
				fmt = "<b>" + word + "</b>";	
			} else if (json[i].includes(" 1")) {
				fmt = "<i>" + word + "</i>"
			} else {
				fmt = word;
			}
			let par = '"' + word + '"';
			par = par.replace("a ","a_");
			par = par.replace("i ","i_");
			par = par.replace("y ","y_");
			par = par.replace("e ","e_");
			par = par.replace("å ","å_");
			par = par.replace("g ","g_");
			par = par.replace("r ","r_");
			let tmp = "<span class='lEl' id='i" + i + "' onclick=lookupWord(" + par +  ")>" + fmt + "</span>";
			el.innerHTML = tmp;
			let id = "i" + i + "_class";
			el.innerHTML += "<span class='lEl' id='i" + i + "_class'>________</span>";
			ol.appendChild(el);
					el = document.getElementById(id)
			el.addEventListener("mouseover", function() {
				this.style.cursor = "pointer";
			})
			el.addEventListener("click", function(event) {
				classifyWord(this, false);
			})
			el.addEventListener("contextmenu", function(event) {
				event.preventDefault();
				classifyWord(this,true);
			})
			tmp = id.replace("_class","");
			el = document.getElementById(tmp);
			el.addEventListener("mouseover", function() {
				this.style.cursor = "help";
			})
			el.addEventListener("contextmenu", function(event) {
				event.preventDefault();
				placeWord(this);
			})
		}
		if (json.length > 10) {
			el = document.getElementById("iPrev");
			el.style.display = "inline-block";
			el = document.getElementById("iNext");
			el.style.display = "inline-block";
		}
		el = document.getElementById("iShowSt");
		var score=0.0;
		switch(c) {
			case "all":
				tot = N_TOT; 
				break;
			case "adjektiv":
				tot = N_ADJ;	
				score = S_ADJ;
				break;
			case "verb":
				tot = N_VERB;	
				score = S_VERB;
				break;
			case "adverb":
				tot = N_ADVERB;	
				score = S_ADVERB;
				break;
			case "substantiv_en":
				tot = N_SUB_EN;	
				score = S_SUB_EN;
				break;
			case "substantiv_ett":
				tot = N_SUB_ETT;	
				score = S_SUB_ETT;
				break;
			default:
				tot = "error";
		}
		el.innerHTML = json.length + "/" + tot;
	})
	.catch(error => {
		console.log(error);
	})
}

function showWordsRefresh() {
	c = $("#iShowStatus").text();
	if (c) {
		showWords(c);
	}
}

function classifyWord(el, demote) {
	let prevHTML = el.previousSibling.innerHTML;
	lastGrade = 2;
	g = 2;
	if (prevHTML.includes("<b")) {
		lastGrade = 0;
		demote ? g = 0 : g=1;
	}
	else if (prevHTML.includes("<i")) {
		lastGrade = 1;
		demote ? g = 0 : g = 2;
	}
	else {
		demote ? g = 1 : g = 2;
	}
	let w = el.previousSibling.innerText;
	c = document.getElementById("iShowStatus").innerText;
	if (g === 0) {
		el.previousSibling.innerHTML = "<b>" + w + "</b>";
	} else if (g === 1) {
		el.previousSibling.innerHTML = "<i>" + w + "</i>";
	} else if (g === 2) {
		el.previousSibling.innerHTML = w;
	}

	fetch('backend/classifyWord.php?word=' + w + '&class=' + c + "&grade=" + g, {
		method: 'get',
		mode: 'cors',
		headers: {
			'Content-Type': 'application/json'
		}
	})
	.then(response => {
		showWords(c);
		wordCount();
		return response.json();
	})
	.then(json => {
	})
	.catch(error => {
		console.log(error);
	})
}

function clearList() {
		let ol = document.getElementById("iKnownList");
		// C5ear any existing elements
		while (ol.hasChildNodes()) {
			ol.removeChild(ol.firstChild);
		}
}

function resetListing() {
	clearList();
}

function removeBar(word) {
	word = word.replace("a_","a ");
	word = word.replace("i_","i ");
	word = word.replace("e_","e ");
	word = word.replace("g_","g ");
	word = word.replace("r_","r ");
	word = word.replace("y_","y ");
	word = word.replace("å_","å ");
	return word;
}

function lookupWord(word) {
	word = removeBar(word);
	if (word === "") {
		word = document.getElementById("iWord").value;
	}
	let url = "https://svenska.se/tre?sok=" + word + "&pz=1";
	window.open(url, '_blank');
}

function translateWord(toEnglish) {
	let word = document.getElementById("iWord").value;
	let url = "https://translate.google.com/?sl=en&tl=sv&text=" + word + "&op=translate";
	if (toEnglish) {
		url="https://tyda.se/search/<word>?lang%5B0%5D=en&lang%5B1%5D=sv"
		url = url.replace("<word>", word);
	}	
	window.open(url, '_blank');
}

function exampleWord() {
	let word = document.getElementById("iWord").value;
	let url='https://sv.wikipedia.org/w/index.php?search="' + word + '&title=Special:Sök&profile=advanced&fulltext=1&searchengineselect=on&ns0=';
	window.open(url, '_blank')
}

function addTextPar() {
	clearList();
	clearShowStats();
	PAR_IND = 0;
	updateTextPar();
}
function updateTextPar() {
	let par = document.getElementById("iInpText").value;	
	// Mark end of paragraph for formatting reasons.
	parArr = par.split("  ");
	if (PAR_IND > parArr.length - 1) {
		PAR_IND = parArr.length - 1;
	}
	let parInd = document.getElementById("iParInd");
	parInd.innerHTML = (PAR_IND + 1) + "/" + parArr.length;
	par = parArr[PAR_IND];
	let words = par.split(" ");
	let wc = words.length;
	if (words[0] === "") {
		wc = 0;
	}
	let txtPar = document.getElementById("iTextPar");
	let txt = "";
	for (let i = 0; i < words.length; i++) {
		let tmp = "w" + i;
		txt += '<span id="' + tmp + '" onclick="checkWord(' + tmp + ')">' + words[i]  + " </span>";
	}
	txtPar.innerHTML = txt;
	for (i =0 ; i < words.length; i++) {
		tmp = "w" + i;
		let el = document.getElementById(tmp);
		el.addEventListener("contextmenu", function(event) {
			event.preventDefault();
			placeWord(el);	
		})
	}
	el = document.getElementById("iPrev");
	el.style.display = "inline-block";
	el = document.getElementById("iNext");
	el.style.display = "inline-block";
	el = document.getElementById("iParInd");
	el.style.display = "block";
}

function checkWord(el) {
	let inp = document.getElementById("iWord");
	let word = el.innerText;
	let tmp = word.split(".");
	word = tmp[0];
	word = cleanWord(word);
	word = word.toLowerCase();
  el.style.color = "red";
	inp.value = word;
	lookupWord("");
}

function placeWord(el) {
	let inp = document.getElementById("iWord");
	let word = el.innerText;
	let tmp = word.split(".");
	word = tmp[0];
	if (word.charAt(word.length-1) === " ") {
		word = cleanWord(word);
	} else {
		word = cleanWords(word);
	}

	word = word.toLowerCase();
	el.style.color = "red";
	inp.value = word;
}

function cleanWords(w) {
	w = w.replaceAll(",","").replaceAll("-","").replaceAll("–","").replaceAll(")","");
	w = w.replaceAll("”", "").replaceAll("'","").replaceAll('"','').replaceAll("”","").replaceAll(":","").replaceAll(";","");
	return w;
}

function cleanWord(w) {
	w = w.replaceAll(",","").replaceAll("-","").replaceAll("–","").replaceAll(")","");
	w = w.replaceAll("”", "").replaceAll("'","").replaceAll('"','').replaceAll("”","").replaceAll(":","").replaceAll(";","").replaceAll(" ", "");
	return w;
}

function resetInd(e) {
	e.preventDefault();
	PAR_IND = 0;
	let par = document.getElementById("iTextPar").innerText;
	if (par) {
		updateTextPar();
	} else {
		showWordsRefresh();
	}
}

function satInd(e) {
	e.preventDefault();
	PAR_IND = 1000;
	let par = document.getElementById("iTextPar").innerText;
	if (par) {
		updateTextPar();
	} else {
		showWordsRefresh();
	}
}

function inc() {
	PAR_IND += 1;
	let par = document.getElementById("iTextPar").innerText;
	if (par) {
		updateTextPar();
	} else {
		showWordsRefresh();
	}
}

function dec() {
	if (PAR_IND === 0) {
		PAR_IND = 0;
	} else {
		PAR_IND -= 1;
	}
	let par = document.getElementById("iTextPar").innerText;
	if (par) {
		updateTextPar();
	} else {
		showWordsRefresh();
	}
}

function getGrade(el) {
	let grade = -1;
	let col = el.style.backgroundColor;
	switch (col) {
		case "black":
			grade = -1	
			break;
		case "red":
			grade = 0;
			break;
		case "orange":
			grade = 1
			break;
		case "green":
			grade = 2;
			break;
		case "white":
			grade = 3;
			break;
		default:
	}
	return grade;
}

function changeGrade(event, el) {
	event.preventDefault();
	let inc = (event.button === 0);
	let grade = getGrade(el);
	if (inc) {
		grade += 1;	
	} else {
		grade -= 1;
	}
	if (grade > 3) {
		grade = 3;
	} else if (grade < -1) {
		grade = -1;
	}	

	switch (grade) {
		case -1:
			el.style.backgroundColor = "black";
			el.style.color = "white";
			break;
		case 0:
			el.style.backgroundColor = "red";
			el.style.color = "black";
			break;
		case 1:
			el.style.backgroundColor = "orange";
			el.style.color = "black";
			break;
		case 2:
			el.style.backgroundColor = "green";
			el.style.color = "black";
			break;
		case 3:
			el.style.backgroundColor = "white";
			el.style.color = "black";
			break;
	}
	showWordsRefresh();
}

function allGrades(el) {
	let elGrade = document.getElementById("iSetGrade");
	if (elGrade.style.backgroundColor === "white") {
		elGrade.style.backgroundColor = "black";
		elGrade.style.color = "white";
		el.innerHTML = "All"
	} else {
		elGrade.style.backgroundColor = "white";
		elGrade.style.color = "black";
		el.innerHTML = "All Unknown";
	}
	showWordsRefresh();
}

function clearText() {
	let el = document.getElementById("iPrev");
	el.style.display = "none";
	el = document.getElementById("iNext");
	el.style.display = "none";
	el = document.getElementById("iParInd");
	el.style.display = "none";
	
	el = document.getElementById("iTextPar");
	el.innerHTML = "";
}	

function clearShowStats() {
	let el = document.getElementById("iShowStatus");
	el.innerHTML = "";
	el = document.getElementById("iShowSt");
	el.innerHTML = "";
}

function highlight(el,event) {
	if (event.type === "mouseover") {
		el.style.cursor = "pointer";
		el.style.backgroundColor = "gray";
	} else {
		el.style.cursor = "";
		el.style.backgroundColor = ""; 
	}
}

</script>
</html>
